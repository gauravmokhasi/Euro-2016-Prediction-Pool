@model List<Euro2016.Models.Fixture>

@{
    ViewBag.Title = "Fixtures";
}
<div class="container">
    <h2>@ViewBag.Title</h2>
    <h3>@ViewBag.Message</h3>

    <p>Click on "Predict Score" to give your predictions for the match and enter the tournament.
    You can only predict scores till the day before a fixture is supposed to be played.
    So scroll through the table to a date, onwards from which, you can predict scores.</p>

    @{
        if (!Model.Any())
        {
            <p class="lead">No fixtures to be displayed at the moment.</p>
        }
        else
        {
            var grid = new WebGrid(Model);
            @grid.GetHtml(
      htmlAttributes: new { id = "FixtureTable" },
      columns: grid.Columns(
          grid.Column("MatchDate", header: "Match Date"),
          grid.Column("HomeTeam", header: "Home Team"),
          grid.Column("HomeTeamScore", header: "Home Team Score"),
          grid.Column("AwayTeamScore", header: "Away Team Score"),
          grid.Column("AwayTeam", header: "Away Team"),
          grid.Column(format: (item) =>
          {
              if (item.MatchDate > DateTime.Now)
                  return @Html.ActionLink("Predict Score", null, null, new { @class = "btn btn-xs btn-default", href = "#myModal", data_toggle = "modal", data_target = "#myModal", data_matchid = (int)item.MatchId, data_home = item.HomeTeam, data_away = item.AwayTeam });
              return null;
          })
          ),
       tableStyle: "table table-striped",
       mode: WebGridPagerModes.All
            )
        }
    }

    <!-- Modal -->
    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="myModalLabel">Predict Scores</h4>
                </div>
                <div class="modal-body">
                    @using (@Html.BeginForm("Predict", "Home", FormMethod.Post, new { id = "predict" }))
                    {
                        <div class="form-group">
                            <input type="hidden" class="form-control" id="matchid" name="MatchId">
                        </div>
                        <div class="form-group">
                            <label for="home" class="control-label" id="homelabel">Home:</label>
                            <input type="number" max="10" class="form-control" id="home" name="HomeTeamPredictedScore">
                        </div>
                        <div class="form-group">
                            <label for="away" class="control-label" id="awaylabel">Away:</label>
                            <input type="number" max="10" class="form-control" id="away" name="AwayTeamPredictedScore">
                        </div>
                    }
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" id="submit">Save Changes</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts
{
    <script>
        $('#myModal').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget) // Button that triggered the modal
            var matchid = button.data('matchid') // Extract info from data-* attributes
            var home = button.data('home') // Extract info from data-* attributes
            var away = button.data('away') // Extract info from data-* attributes
            // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
            // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
            var modal = $(this)
            modal.find('#homelabel').text(home)
            modal.find('#awaylabel').text(away)
            modal.find('#matchid').val(matchid)
        })
        $('#submit').click(function () {
            $('#predict').submit();
        });
    </script>
}
